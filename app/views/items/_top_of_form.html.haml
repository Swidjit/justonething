= f.semantic_errors
= f.inputs do
  - if current_user.delegators.present?
    = f.input :user_id, :as => :select, :collection => current_user.delegators, :label => "Post As", :include_blank => current_user.display_name, :input_html => { :onchange => 'swidjit.updateVisibilityForm(this)' }
  = f.input :public
  = f.input :title
  = f.input :description, :as => :text, :input_html => {:id => 'item_description'}
  = f.input :tag_list, :label => 'Tags', :input_html => {"data-pre" => @item.tags.collect{|tag| {:id => tag.name, :name => tag.name}}.to_json}
  - if @item_preset_tags.any?
    %li
      %ul.preset_tags.token-input-list-facebook
        - @item_preset_tags.each do |tag|
          %li.token-input-token-facebook.preset_tag= tag.tag
  = f.semantic_errors :tags

:javascript
  $(document).ready(function(){
    $("#item_description").autocomplete({ wordCount: 1, mode: "outer", on: { query: function(text, cb) {
      if (text.length === 1) return;

      $.getJSON('/users/' + text.substr(1, text.length - 1) + '/suggestions.json', function(json) {
        cb(json.users);
      });
    } } });

    var tag_list_selector = "##{@item.model.class.to_s.underscore}_tag_list";
    $(tag_list_selector).tokenInput(
      "#{autocomplete_search_tags_path}", {
        theme: "facebook",
        preventDuplicates:"true",
        minChars: 2
      }
    );
    $("li.preset_tag").click(function(){
      var tag_name = $.trim($(this).text());
      $(tag_list_selector).tokenInput(
        "add",
        {
          id: tag_name,
          name: tag_name
        }
      );
    });
  });
