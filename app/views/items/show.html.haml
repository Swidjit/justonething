:javascript
  $(document).ready(function(){
    $(".addTo2").toggle(
      function () {
        $("#visiEXP").animate(
          {height:$(".visiRow").height()},
          {queue:false, duration: 300},
          $("#visiEXP").css('overflow','visible')
        );
      }, function () {
        $("#visiEXP").css('overflow','hidden').animate(
          {height: "0px"},
          {queue:false, duration: 300});
      }
    );
  });
  $(document).ready(function(){
    $(".reveal-suggest").toggle(
      function () {
        $("#suggest-form").animate(
          {height:$(".suggest-form").height()},
          {queue:false, duration: 300},
          $("#suggest-form").css('overflow','visible')
        );
      }, function () {
        $("#suggest-form").css('overflow','hidden').animate(
          {height: "0px"},
          {queue:false, duration: 300});
      }
    );
    $('.comment-show-reply').click(function(event) {
      var $e = $(event.target);
      var $p = $('#comment_'+$e.data('parent'));
      $p.children('.reply-form').toggle().find('textarea').focus();
      return false;
    });
  });
  
.contentRow.without_border.overflow-visible
  -if (!@item.expires_on.nil?) && (Date.strptime(@item.expires_on, '%m/%d/%Y') < Date.today)
    .alert.expired-notice
      %strong Notice:
      This item expired on 
      = @item.expires_on 
      and it has not been deactivted or renewed by the author.  You may wish to comment or private message the author to check if it is still valid.
  .row-fluid    
    .span12
      %h2.page-heading
        %i.icon-camera-retro        
        = @item.title
  .row-fluid  
    .span12
      .btn-toolbar{style: "margin:15px 0 5px -2px"}
        = @item.manage_links
  #suggest-form{style:"overflow:hidden; height: 0px"}
    .row-fluid
      .span12.padded10
        = @item.suggest_item_form          
  .row-fluid  
    .span8
      .item-body{style: "padding: 0px 10px;"}
        #test
          .itemDesc= @item.description
          - if @item.respond_to?(:link_tag)
            Link:
            = @item.link_tag
      - unless @item.user.nil?
        posted by 
        = link_to @item.user.display_name, profile_path(@item.user.display_name)    
      .multiLinks= @item.iconic_information(false)
    .span4
      .itemPic.wide{style:"width: 90%"}
        = @item.thumb_with_lightbox  

  
- if @item.allows_offers?
  .contentRow.h_pad.without_border.without_padding
    %p.header
      %label Private Messages
  .contentRow.h_pad.without_border.without_padding
    - if can? :manage, @item
      %p Private discussions with people who have contacted you about this item.
    - else 
      %p You can have a private conversation about this item with its author.
    .comment_block
      = render 'offers'

= yield :middle

.contentRow.h_pad.without_border.without_padding
  %p.header
    %label Comments
.contentRow.h_pad.without_border.without_padding
  Or, comment publicly to all users who can view this item.
  - if @comments.any?
    = render :partial => 'comments/comment', :collection => CommentDecorator.decorate(@comments.order(:created_at))
  .comment_block
    %a#comment{:name => 'comment'}
    = form_for @item.comments.build, {:url => comments_path(@item)} do |f|
      .formrow.form-header
        Add a comment
      .formrow
        = f.text_area :text, :class => 'user-suggestion'
      .formrow
        = f.submit 'Comment'

-#
  .contentRow.h_pad.without_border.without_padding
    %p.header
      %label Recommendations
  .contentRow.h_pad.without_border.without_padding
    - if @item.recommendations.any?
      = render :partial => 'recommendations/for_item', :collection => RecommendationDecorator.decorate(@item.recommendations)
    - if can? :recommend, @item
      .comment_block
        Recommend
        %a#recommend{:name => 'recommend'}
        = form_for Recommendation.new, :url => recommendations_path(@item) do |f|
          = f.text_area :description, { :class => 'user-suggestion' }
          = f.submit 'Recommend'

- content_for :head do
  %meta{:property => "og:title", :content => "Swidjit - #{@item.title}"}
  %meta{:property => "og:url", :content => @item.distinct_url}
  %meta{:property => "og:site_name", :content => "Swidjit"}
  %meta{:property => "fb:admins", :content => Facebook::APP_ID}
  %meta{:name => "description", :content => @item.short_description}
  %meta{:name => "keywords", :content => @item.tag_list}
