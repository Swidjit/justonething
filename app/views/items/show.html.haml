:javascript
  $(document).ready(function(){
    $(".addTo2").toggle(
      function () {
        $("#visiEXP").animate(
          {height:$(".visiRow").height()},
          {queue:false, duration: 300},
          $("#visiEXP").css('overflow','visible')
        );
      }, function () {
        $("#visiEXP").css('overflow','hidden').animate(
          {height: "0px"},
          {queue:false, duration: 300});
      }
    );
  });
.contentRow.without_border.overflow-visible
  -if (!@item.expires_on.nil?) && (Date.strptime(@item.expires_on, '%m/%d/%Y') < Date.today)
    .alert.expired-notice
      %strong Notice:
      This item expired on 
      = @item.expires_on 
      and it has not been deactivted or renewed by the author.  You may wish to comment or private message the author to check if it is still valid.
  .itemPic.wide
    = @item.class_feed
    %br
    = @item.thumb_with_lightbox
  .itemInfo
    %h1.itemTitle= @item.title
    - if can? :manage, @item
      #visiEXP
        .visiRow
          = @item.visibility_form
          .xtraLine
      .clear-right
    .itemDesc= @item.description
    - if @item.respond_to?(:link_tag)
      Link:
      = @item.link_tag
    .multiLinks= @item.iconic_information(false)
    .itemIcons
      = @item.manage_links
      - if can? :manange, @item
        %span#addTo2.addTo2
          %a{:href => "#"}
            = image_tag('visible_icon.jpg')
            = image_tag 'arrowDN.png'
  .clear

- if @item.allows_offers?
  .contentRow.h_pad.without_border.without_padding
    %p.header
      %label Private Messages
  .contentRow.h_pad.without_border.without_padding
    - if can? :manage, @item
      %p Private discussions with people who have contacted you about this item.
    - else 
      %p You can have a private conversation about this item with its author.
    .comment_block
      = render 'offers'
    %div{:style => "clear:both;"}

= yield :middle

.contentRow.h_pad.without_border.without_padding
  %p.header
    %label Comments
.contentRow.h_pad.without_border.without_padding
  Or, comment publicly to all users who can view this item.
  - if @comments.any?
    = render :partial => 'comments/comment', :collection => CommentDecorator.decorate(@comments.order(:created_at))
  .comment_block
    %a#comment{:name => 'comment'}
    = form_for @item.comments.build, {:url => comments_path(@item)} do |f|
      = f.text_area :text, :class => 'user-suggestion'
      = f.submit 'Comment'

-#
  .contentRow.h_pad.without_border.without_padding
    %p.header
      %label Recommendations
  .contentRow.h_pad.without_border.without_padding
    - if @item.recommendations.any?
      = render :partial => 'recommendations/for_item', :collection => RecommendationDecorator.decorate(@item.recommendations)
    - if can? :recommend, @item
      .comment_block
        Recommend
        %a#recommend{:name => 'recommend'}
        = form_for Recommendation.new, :url => recommendations_path(@item) do |f|
          = f.text_area :description, { :class => 'user-suggestion' }
          = f.submit 'Recommend'

- content_for :head do
  %meta{:property => "og:title", :content => "Swidjit - #{@item.title}"}
  %meta{:property => "og:url", :content => @item.distinct_url}
  %meta{:property => "og:site_name", :content => "Swidjit"}
  %meta{:property => "fb:admins", :content => Facebook::APP_ID}
